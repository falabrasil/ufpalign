#!/bin/bash
#
# Grupo FalaBrasil (2020)
# Federal University of Par√° (UFPA)
#
# author: november 2020
# cassio batista - https://cassota.gitlab.io/


if test $# -ne 3 ; then
    echo "usage: $0 <pts-truth-dir> <pts-aligned-dir> <log-file>"
    # echo "  <pts-truth-dir> is probably the one generated by 'm2m2tg.py'"
    # echo "  <pts-aligned-dir> is probably the one parsed from Kaldi's CTM files"
    # echo "  <log-file> is the file where the output will be written to"
    exit 1
elif [ ! -d $1 ] || [ ! -d $2 ] ; then
    echo "$0: error: '$1' and '$2' must both be dirs"
    exit 1
elif [ -f $3 ] ; then
    rm -f $3
fi

truth_dir=$1
align_dir=$2
log_file=$3

# NOTE: CB: according to MFA's paper section 3.2:
#       > The metric we use for accuracy of a forced-aligned boundary is the
#       > absolute difference (in msec) from the manually-annotated boundary.
function calc_diff() {
    pts=$1
    truth=$truth_dir/$2
    align=$align_dir/$2
    i=1 ; j=1 ; m=$(wc -l < $truth)

    echo "#$(basename $pts)" >> $log_file
    while [ $i -lt $m ] ; do

        line=$(sed "${i}q;d" $truth)
        token_i=$(echo $line | awk '{print $1}')
        times_i=$(echo $line | awk '{print $2}')
        i=$((i+1))

        line=$(sed "${j}q;d" $align)
        token_j=$(echo $line | awk '{print $1}')
        times_j=$(echo $line | awk '{print $2}')
        j=$((j+1))

        echo -e "$pts: #$token_i#\t#$token_j# ($2)"
        diff=$(echo "$times_i - $times_j" | bc)
        python -c "print('%.4f' % abs($diff))" >> $log_file
    done
}

k=1
l=$(find $truth_dir -name "*.pts" | wc -l)

for pts in $(find $truth_dir -name "*.pts" | sort) ; do
    printf "\r[%04d / %04d]\n" $k $l | lolcat
    k=$((k+1))
    calc_diff $pts $(basename $pts)
done
